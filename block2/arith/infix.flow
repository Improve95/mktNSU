import exprDecl;

export {
  re2ie(expr : [RpnExpr]) -> InfixExpr;
  ie2s(expr : [InfixExpr]) -> str;
}

  stack : [InfixExpr] = [];
re2ie(expr : [RpnExpr]) -> InfixExpr {

	a = fold(expr, stack, \st, val -> {
		switch (val) {
			Const(c):
				arrayPush(st, Const(c));

			/* Var(v):
				arrayPush(st, Var(v)); */

			OpName(name): {
				right = lastElement(st, Const(0));
				a = removeIndex(st, length(st) - 1);
				left = lastElement(a, Const(0));
				b = removeIndex(a, length(a) - 1);
				arrayPush(b, BinOp(name, left, right));
			}
    
		}
	});

	a[0];
}

ie2s(expr : [InfixExpr]) -> str {

}