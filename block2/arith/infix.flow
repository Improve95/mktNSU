import exprDecl;

export {
  /* general */
  infix2s(e : Expr, isMul : int) -> string;

  /* lab5 */
  infix2i(e : Expr) -> int;
}

infix2s(e : Expr, isMul : int) -> string {
  switch (e : Expr) {
    Int(i) : i2s(i);
    Sum(e1, e2) : {
      recExpr = infix2s(e1, 0)  + "+" + infix2s(e2, 0); 
      if (isMul == 1) {
        "(" + recExpr + ")";
      } else { 
        recExpr;
      }
    }
    Mul(e1, e2) :  infix2s(e1, 1)  + "*" +  infix2s(e2, 1);
  }
}

infix2i(e : Expr) -> int {
  switch (e) {
    Int(i): i;
    Sum(e1, e2): infix2i(e1) + infix2i(e2);
    Mul(e1, e2): infix2i(e1) * infix2i(e2);
  }
}