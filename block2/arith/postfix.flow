import infix;

/* 
	s2re - string to rpn expression
	ie2re - infix expression to rpn expression
*/

export {
	s2re(s: string) -> [RpnExpr];
	ie2re(e : InfixExpr) -> [RpnExpr];
}

s2re(s: string) {
	parsic(postfixGrammar, s, defaultPegActions);
}

ie2re(ie : InfixExpr) -> [RpnExpr] {
	re : [RpnExpr] = [];
	translateReq(ie, re);
}

translateReq(ie : InfixExpr, re : [RpnExpr]) -> [RpnExpr] {
	switch(ie) {
		Const(c): arrayPush(re, Const(c));
		BinOp(name, l, r): {
			a = translateReq(l, re);
			b = translateReq(r, a);
			arrayPush(b, OpName(name));
		}
		// default: arrayPush(re, Const(0));
	}
}