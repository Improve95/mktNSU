expr = zero | one ;
zero = "0";
one = "1";
expr = '';

unit '+' expr;
unit = const | "(" expr ")";

expr = sum;

sum = const :left '+' expr :right { Sum(:left, :right) }
    | const :only {:only};

mul = const :left '+' expr :right { Mul(:left, :right) }
    | const :only {:only};

factor = const | "(" expr:e ")" { :e };

const = digit+ $d {IntConst(s2i($d))};
digit = '0' - '9';


// lab7
//разбор выражения с вычитанием
fold(tail, head, \c, e -> sub(c, e));

//custom semantic 
buildSub(args: [flow]) -> flow {
    
}


    buildSubTyped(head: Expr, tail: [Expr]);