import string;
import math/math;
import ds/tree;
import lingo/pegcode/driver;
import fs/filesystem;

export {
  Expr ::= Sum, Mul, Int;
    Int(val : int);
    Sum(i1 : Expr, i2 : Expr);
    Mul(i1 : Expr, i2 : Expr);

  ar2i(e : Expr) -> int {
    switch (e) {
      Int(val): val;
      Sum(i1, i2): ar2i(i1) + ar2i(i2);
      Mul(i1, i2): ar2i(i1) * ar2i(i2);
    }
  }

  calculate(s : string) -> int {
	  t = setTree(defaultPegActions.t, "calculate", \as -> Int(s2i(as[0])));
    expr = parsic(compilePegGrammar("#include exprParser.lingo"), s, SemanticActions(t));
    ar2i(expr)
  }
}

main() {
  expr = "2*(5+5)";
  println(calculate(expr));

  quit(0);
}
